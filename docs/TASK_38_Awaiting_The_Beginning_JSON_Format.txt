"Task": {
	// optional
	"Label"="My Awaiting The Beginning",

	// mandatory
	"Type": "Awaiting-The-Beginnin",

	"Parameters": {

		// mandatory
		"References": [
			// mandatory. Just one Reference needed to identify the picture to be used to build the live content
			// In case this task is placed inside an onSuccess event, the Reference... item can be omitted.
			// In such a case, the System will automatically add the Reference... item using the key
			// of the picture
			// As reference can be used "ReferenceMediaItemKey" or "ReferenceUniqueName"

			// The below object could contain optionally the "ErrorIfContentNotFound" boolean field
			// to specify if the MMS has to continue or not in case of a content not found.
			// Default is true

			{ "ReferenceMediaItemKey": 11 }
		],

		// optional. To be set with the EncodersPool label only in case 
		// a specific encoders pool has to be used
		"EncodersPool": "",

		// mandatory: it specifies the end of the Awaiting The Beginning task. The countdown
		//		specified into the video depends on this parameter. His format is:
		//       - Zulu/UTC Date-time having the following format: YYYY-MM-DDTHH:MI:SSZ
		"CountDownEnd": "2019-01-21T13:30:00Z",

		// optional, possible values: HLS, DASH, RTMP_Stream. Default: HLS
		"OutputType": "HLS",

		// DeliveryCode is used only in case of HLS and DASH
		//	It identifies this specific delivery. In case for example
		//	- we have two HLS Outputs or
		//	- we have the same channel delivered
		//		as Recording monitor HLS and Live Proxy Output
		//	In these scenarios, delivery code identifies each delivery.
		//	Internally the delivery code is used to
		//		- build the delivery URL (so it is used to build
		//			the path where the HLS segments are saved)
		// mandatory only if OutputType is HLS or DASH.
		"DeliveryCode": 12345,

		// optional, used only in case of HLS, Default: 10
		"SegmentDurationInSeconds": 10,

		// optional, used only in case of HLS, Default: 6
		"PlaylistEntriesNumber": 6,

		// mandatory only in case of RTMP_Stream
		"RtmpUrl": "...",

		// mandatory: this is the encoding profile to be used for the creation of the video.
		//	It has to be specified using EncodingProfileKey or EncodingProfileLabel.
		//	In case the EncodingProfileLabel is not unique in the system, ContentType has to be present too
		//	Possible values for the ContentType are: video, audio
		"EncodingProfileKey": 1,
		"EncodingProfileLabel": "Profile sport",
		"ContentType": "video"
	}
}

