"task": {
	// optional
	label="...",

	// mandatory
	"type": "Cut",

	"parameters": {

		// mandatory
		"references": [
			// mandatory. Just one Reference needed to identify the video to be cut.
			// In case this task is placed inside an onSuccess event, the Reference... item can be omitted.
			// In such a case, the System will automatically add the Reference... item using the key
			// of the video by which this Cut depend on.
			// As reference can be used:
			//    "mediaItemKey" or
			//    "physicalPathKey"
			//    "uniqueName"

			// The below object could contain optionally:
			// - encodingProfileKey or encodingProfileLabel to specify
			//		a specific profile
			// - stopIfReferenceProcessingError in case of multiple References,
			//		this boolean field specifies if the MMS has to continue or not
			//		in case of an error during the processing. Default is false
			// - mediaItemTitle, optional

			{ "mediaItemKey": 11 }
		],

		// optional
		// - KeyFrameSeeking: the start of your video will be aligned with the Key frame
		//		nearest to the requested start time. No frame accuracy, it jumps from I-frame
		//		to I-frame to reach the seek-point. (very fast)
		// - FrameAccurateWithEncoding: frame-accurate cut because the video will be re-encoded
		//		and it will start with an I-frame. It considers all frames including
		//		Predicted frames (B, P). (slow)
		// - FrameAccurateWithoutEncoding: With this option, if the start time that
		//		you specified falls on a Predicted Frame, it is possible that the output video
		//		will not start smoothly and might have some stutter, or black video until
		//		the first I-frame is reached
		// - KeyFrameSeekingInterval: With this option, it is searched the closest keyframe
		//		to startTime/endTime in the source file and these keyframes will be used for the cut
		//		The key frames are searched lookin the the intervals provided by
		//		the startKeyFrameSeekingInterval and endKeyFrameSeekingInterval parameters
		// Default is KeyFrameSeeking
		"cutType": "KeyFrameSeeking",

		// mandatory
		//	startTime format: [-][HH:]MM:SS[.m...] or [-]S+[.m...] or HH:MM:SS:FF
		"startTime": "0.5",

		// optional: endTime or MaxFramesNumber have to be present
		//		In case endTime is negative, it means endTime is changed doing
		//			endTime = source duration - (-endTime)
		//	endTime format: [-][HH:]MM:SS[.m...] or [-]S+[.m...] or HH:MM:SS:FF
		"endTime": "3.5",

		// optional: if present, it means the startTime and endTime are timing relative
		//	to the timeCode metadata present in the source media content.
		//	For example, if startTime is 10:00:00:00 and the timecode metadata in the source media is 08:00:00:00,
		//	the cut will start at 02:00:00:00
		//  This activity is often used in case of mxf media files
		"timesRelativeToMetaDataField": "timecode",

		// mandatory only in case cutType is KeyFrameSeekingInterval
		//	This is the interval where to look for the key frame into the source file closest
		//	to the startTime/endTime parameter.
		//  Format: 
        //		INTERVAL  ::= [START|+START_OFFSET][%[END|+END_OFFSET]]                                            
        //		INTERVALS ::= INTERVAL[,INTERVALS]                                                                 
        //		esempi:                                                                                            
        //			10%+20,01:30%01:45                                                                        
        //				Seek to time 10, read packets until 20 seconds after the found seek point, then seek to position 01:30 (1 minute and thirty seconds) and read packets until position 01:45.
        //			01:23%+#42                                                                                
        //				Read only 42 packets after seeking to position 01:23:                                              
        //			%+20                                                                                      
        //				Read only the first 20 seconds from the start:                                                     
		"startKeyFrameSeekingInterval": "543%+20",
		"endKeyFrameSeekingInterval": "43%+20",

		// optional. Only in case EndTimeInSeconds overcome the duration of the input media:
		//		if FixEndTimeIfOvercomeDuration is set to true
		//			the EndTime is changed to the duration of the media.
		//		if FixEndTimeIfOvercomeDuration is set to false
		//			this task will fail because the cut is not possible to be done
		//	Default is true
		"fixEndTimeIfOvercomeDuration": true,

		// optional: EndTimeInSeconds or MaxFramesNumber have to be present
		"framesNumber": 10,

		// optional. To be set with the EncodersPool label only in case 
		// a specific encoders pool has to be used
		// It is used only in case of KeyFrameSeeking false because a reencoding is needed
		"encodersPool": "",

		// optional. Possible values: Low, Medium, High
		// If not present or if it is specifying a priority bigger than
		// the allowed for this Workspace,
		// the MaxEncodingPriority of the Workspace will be used.
		// It is used only in case of KeyFrameSeeking false because a reencoding is needed
		"encodingPriority": "Low",

		// mandatory ONLY in case of KeyFrameSeeking false because a reencoding is needed
		//	This is the encoding profile to be used for the creation
		//	of the cut video.
		//	It has to be specified using EncodingProfileKey or EncodingProfileLabel.
		"encodingProfileKey": 1,
		"encodingProfileLabel": "Profile sport",

		// optional (not used in case of KeyFrameSeeking false): by default the file format of the output is the same of the source media to be cut. Only in case the source file format is m3u8, the default output format will be ts.
		//	This parameter is needed only in case the default output file format has to be changed
		"outputFileFormat": "mp4",

		// optional: If present, it specifies when the Task has to be executed. The processing of the task
		//		can be delayed respect to the specified date based on his dependencies with other tasks.
		//		The date format is:
		//       - Zulu/UTC Date-time having the following format: YYYY-MM-DDTHH:MI:SSZ
		//	If it is not present, by default it will be initialized with the ingesion time
		"processingStartingFrom": "2019-01-21T12:30:00Z",

		// optional: It is used in case this Task has to wait a Task of another Workflow
		"waitFor": [
			{
				"globalIngestionLabel": "XXXX"
			}
		],

		// optional: it might contain any kind of user data (json format).
		// The platform stores them and returns this data to the Customer 
		// every time is requested.
		// The UserData are involved in searches as well
		"userData": { },

		// optional: it specifies the retention of the content (MediaItem retention). Once the retention expires,
		//		content including all his profiles (PhysicalItems) will be removed.
		//     Format: number + s (seconds) or m (minutes) or h (hours) or d (days) or M (month) or Y (year)
		//     Examples: 10s, 45m, 4h, 7d, 3M, 1y
		// By default it is 60m
		"retention": "60m",

		// optional: It is possible to specify a specific retention just for the profile (PhysicalItem).
		//		In this case, if the retention of the profile (PhysicalItem) expires before the retention of the
		//		content (MediaItem), only the profiles will be removed.
		//		It has not have sense specifies a PhysicalItem retention greater than the MediaItem retention.
		//		If it is not specified, only the MediaItem retention is used.
		"physicalItemRetention": "30m".

		// optional
		"title": "My title",

		// optional
		"ingester": "my ingester",

		// optional
		"tags": [ "tag 1", "tag 2" ],

		// optional: it specifies the filename without extension used by MMS when the content is delivered
		"deliveryFileName": "myFileName",

		// Optional: uniqueName can be used by the Client to set a Key to the content.
		// Since it represents a unique key, the Client cannot add two contents using the same uniqueName within a Workspace,
		// unless the field 'allowUniqueNameOverride' is set to true
		"uniqueName": "XXX",

		// Optional: if true this field allow a unique name to be override. Since the uniqueName has to be unique in MMS,
		// in case a uniqueName is override, the previous one is changed to be <previous unique name>-<timestamp>
		"allowUniqueNameOverride": false,

		// optional: by default the content is published.
		//    It specifies if and when the content is published.
		//    In case the content is not published, the delivery of the content will fail
		//    Possible values can be:
		//       - NOW
		//       - FOREVER
		//       - Zulu/UTC Date-time having the following format: YYYY-MM-DDTHH:MI:SSZ
		"publishing": {
			"startPublishing": "NOW",
			"endPublishing": "FOREVER"
		}
	}
}
