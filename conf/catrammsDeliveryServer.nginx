
	access_log   /var/catramms/logs/nginx/mms-delivery.access.log main;
	error_log    /var/catramms/logs/nginx/mms-delivery.error.log error;

	root /var/catramms/storage/MMSRepository/;

	location /healthy.txt {
		return 200;
	}

	#1a
	#authorization through parameter
	#next location manages .m3u8 request (authorize request and add token parameter to each line of the manifest)
	location ~ .(m3u8|mpd)$ {
		#Uso una coda abbondante per gestire le richieste contemporanee.
		#Consideriamo che solo la pagina mediaItems.xhtml genera 50 richieste contemporanee
		#per il download delle picture (vedi commento in nginx.conf)
		#Con nodelay le richieste non saranno evase secondo il rate indicato in nginx.conf
		#ma tutte istantaneamente.
		#Nota: parliamo dello stesso client IP.
		limit_req zone=mmsDeliveryLimit burst=100 nodelay;

		if ($request_method = GET) {
			#live
			rewrite ^/MMSLive /api?method=manageHTTPStreamingManifest_authorizationThroughParameter&cookie=$cookie_mmsInfo last;                 
			#vod
			rewrite ^/MMS_ /api?method=manageHTTPStreamingManifest_authorizationThroughParameter&cookie=$cookie_mmsInfo last;                 
		}
	}

	#1b
	#next location manages the other requests: .mp4, .ts (authorize request)
	location ~ ^/(MMS_|ExternalStorage_|MMSLive) {
		#Uso una coda abbondante per gestire le richieste contemporanee.
		#Consideriamo che solo la pagina mediaItems.xhtml genera 50 richieste contemporanee
		#per il download delle picture (vedi commento in nginx.conf)
		#Con nodelay le richieste non saranno evase secondo il rate indicato in nginx.conf
		#ma tutte istantaneamente.
		#Nota: parliamo dello stesso client IP.
		limit_req zone=mmsDeliveryLimit burst=100 nodelay;

		if ($arg_token) {
			set $token "$arg_token---$cookie_mmsInfo";
		}
		if ($arg_deliveryFileName) {
			add_header Content-Disposition 'attachment; filename="$arg_deliveryFileName"';
		}

		auth_request /catramms/delivery/checkAuthorizationThroughParameter;

		if ($http_Origin) {
			set $origin '$http_Origin';
		}
		if ($http_Origin = "") {
			set $origin '*';
		}
		if ($request_method = 'GET') {
			add_header 'Access-Control-Allow-Origin' '$origin';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
	}

	#2b
	location = /catramms/delivery/checkAuthorizationThroughParameter {
		internal;

		proxy_pass http://$deliveryHostName/catramms/delivery/authorizationThroughParameter;
		#$host will be mms-delivery.restream.ovh
		proxy_set_header Host $host;
		proxy_pass_request_body off;
		proxy_set_header Content-Length "";
		#proxy_set_header X-Original-METHOD $request_method;
		proxy_set_header X-Original-METHOD $token;
		proxy_set_header X-Original-URI $request_uri;
	}

	#3b
	location /catramms/delivery/authorizationThroughParameter {
		allow 127.0.0.1;
		deny all;
		if ($request_method = GET) {
			rewrite ^/catramms/delivery/authorizationThroughParameter/?$ /api?method=deliveryAuthorizationThroughParameter last;
		}
	}

	#2a o 4b
	#common part
	location /api {
		internal;

		fastcgi_read_timeout 120;

		#the api fastcgi listen to 8010 port (see scripts/mmsApi.sh)
		fastcgi_pass   127.0.0.1:8010;
		include /opt/catramms/nginx/conf/fastcgi_params;
	}

	location / {
		return 403;
		break;
	}

